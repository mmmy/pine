// This Pine Script® code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © gouge99

//@version=6
indicator("MT5 Indicator", overlay=true, max_labels_count = 500)

// 交易设置
tradingGroup = '交易设置'
resistanceStartTime = input.time(timestamp("2025-07-15 00:00:00"), "压力位开始时间", group=tradingGroup, tooltip="控制压力位信号的起始时间，纺锤线信号不受此限制")
tradingDirection = input.string("做多", "交易方向", options=["做多", "做空"], group=tradingGroup)
positionSize = input.float(1.0, "开仓数量", minval=0.01, group=tradingGroup)
resistanceLevel = input.price(0.0, "阻力位价格", group=tradingGroup, tooltip="大于0才生效")
minBodySize = input.float(1.0, "最小实体长度", group=tradingGroup)
enableSpinningTopSignal = input.bool(true, "启用纺锤线信号开仓", group=tradingGroup)
enableSpinningTopPriceCheck = input.bool(true, "启用纺锤线价格比较条件", group=tradingGroup, tooltip="做多：开盘价>白色纺锤线收盘价；做空：开盘价<黑色纺锤线收盘价")

// 时间设置
timeGroup = '时间设置'
timezone = input.string("GMT+8", "时区", options=["GMT-12", "GMT-11", "GMT-10", "GMT-9", "GMT-8", "GMT-7", "GMT-6", "GMT-5", "GMT-4", "GMT-3", "GMT-2", "GMT-1", "GMT+0", "GMT+1", "GMT+2", "GMT+3", "GMT+4", "GMT+5", "GMT+6", "GMT+7", "GMT+8", "GMT+9", "GMT+10", "GMT+11", "GMT+12"], group=timeGroup)
enableSession1 = input.bool(true, "启用", group=timeGroup, inline="session1")
timeSession1 = input.session("0800-1200", "交易时间段1", group=timeGroup, inline="session1")
enableSession2 = input.bool(true, "启用", group=timeGroup, inline="session2")
timeSession2 = input.session("1300-1700", "交易时间段2", group=timeGroup, inline="session2")
enableSession3 = input.bool(true, "启用", group=timeGroup, inline="session3")
timeSession3 = input.session("1900-2300", "交易时间段3", group=timeGroup, inline="session3")
enableSession4 = input.bool(true, "启用", group=timeGroup, inline="session4")
timeSession4 = input.session("0000-0600", "交易时间段4", group=timeGroup, inline="session4")
enableSession5 = input.bool(false, "启用", group=timeGroup, inline="session5")
timeSession5 = input.session("0600-0800", "交易时间段5", group=timeGroup, inline="session5")
enableSession6 = input.bool(false, "启用", group=timeGroup, inline="session6")
timeSession6 = input.session("1200-1300", "交易时间段6", group=timeGroup, inline="session6")
enableSession7 = input.bool(false, "启用", group=timeGroup, inline="session7")
timeSession7 = input.session("1700-1900", "交易时间段7", group=timeGroup, inline="session7")
enableSession8 = input.bool(false, "启用", group=timeGroup, inline="session8")
timeSession8 = input.session("2300-0000", "交易时间段8", group=timeGroup, inline="session8")
enableSession9 = input.bool(false, "启用", group=timeGroup, inline="session9")
timeSession9 = input.session("0400-0600", "交易时间段9", group=timeGroup, inline="session9")
enableSession10 = input.bool(false, "启用", group=timeGroup, inline="session10")
timeSession10 = input.session("2100-2300", "交易时间段10", group=timeGroup, inline="session10")

// 输入参数设置
infoLabal = '显示设置'
showSpinInfo = input.bool(false, title = '显示纺锤线', group = infoLabal)
label_color_neutral = input(color.gray, "Label Color Neutral", group = infoLabal)
showTimeBackground = input.bool(false, "显示有效时间区间背景", group = infoLabal)
showResistanceLevel = input.bool(true, "显示阻力位线", group = infoLabal)
showStrategyNotice = input.bool(true, "显示指标信息表格", group = infoLabal)

// 纺锤线计算
C_Len = 14 // ta.ema depth for bodyAvg
C_ShadowPercent = 5.0 // size of shadows
C_ShadowEqualsPercent = 100.0
C_DojiBodyPercent = 5.0
C_Factor = 2.0 // shows the number of times the shadow dominates the candlestick body

C_BodyHi = math.max(close, open)
C_BodyLo = math.min(close, open)
C_Body = C_BodyHi - C_BodyLo
C_BodyAvg = ta.ema(C_Body, C_Len)
C_SmallBody = C_Body < C_BodyAvg
C_LongBody = C_Body > C_BodyAvg
C_UpShadow = high - C_BodyHi
C_DnShadow = C_BodyLo - low
C_HasUpShadow = C_UpShadow > C_ShadowPercent / 100 * C_Body
C_HasDnShadow = C_DnShadow > C_ShadowPercent / 100 * C_Body
C_WhiteBody = open < close
C_BlackBody = open > close
C_Range = high-low
C_IsInsideBar = C_BodyHi[1] > C_BodyHi and C_BodyLo[1] < C_BodyLo
C_BodyMiddle = C_Body / 2 + C_BodyLo
C_ShadowEquals = C_UpShadow == C_DnShadow or (math.abs(C_UpShadow - C_DnShadow) / C_DnShadow * 100) < C_ShadowEqualsPercent and (math.abs(C_DnShadow - C_UpShadow) / C_UpShadow * 100) < C_ShadowEqualsPercent
C_IsDojiBody = C_Range > 0 and C_Body <= C_Range * C_DojiBodyPercent / 100
C_Doji = C_IsDojiBody and C_ShadowEquals

patternLabelPosLow = low - (ta.atr(30) * 0.6)
patternLabelPosHigh = high + (ta.atr(30) * 0.6)
C_SpinningTopWhiteNumberOfCandles = 1
C_SpinningTopWhitePercent = 34.0
C_IsSpinningTopWhite = C_DnShadow >= C_Range / 100 * C_SpinningTopWhitePercent and C_UpShadow >= C_Range / 100 * C_SpinningTopWhitePercent and not C_IsDojiBody
// 白色纺锤线
C_SpinningTopWhite = C_IsSpinningTopWhite and C_WhiteBody
if showSpinInfo and C_SpinningTopWhite
    var ttSpinningTopWhite = "Spinning Top White\nWhite spinning tops are candlestick lines that are small, green-bodied, and possess shadows (upper and lower) that end up exceeding the length of candle bodies. They often signal indecision between buyer and seller."
    label.new(bar_index, patternLabelPosLow, text="STW", style=label.style_label_up, color = label_color_neutral, textcolor=color.white, tooltip = ttSpinningTopWhite)

C_SpinningTopBlackNumberOfCandles = 1
C_SpinningTopBlackPercent = 34.0
C_IsSpinningTop = C_DnShadow >= C_Range / 100 * C_SpinningTopBlackPercent and C_UpShadow >= C_Range / 100 * C_SpinningTopBlackPercent and not C_IsDojiBody
// 黑色纺锤线
C_SpinningTopBlack = C_IsSpinningTop and C_BlackBody
if showSpinInfo and C_SpinningTopBlack
    var ttSpinningTopBlack = "Spinning Top Black\nBlack spinning tops are candlestick lines that are small, red-bodied, and possess shadows (upper and lower) that end up exceeding the length of candle bodies. They often signal indecision."
    label.new(bar_index, patternLabelPosLow, text="STB", style=label.style_label_up, color = label_color_neutral, textcolor=color.white, tooltip = ttSpinningTopBlack)

bsSTW = ta.barssince(C_SpinningTopWhite)
bsTTB = ta.barssince(C_SpinningTopBlack)

// 保存纺锤线的收盘价
var float whiteSpinClosePrice = na
var float blackSpinClosePrice = na

if C_SpinningTopWhite
    whiteSpinClosePrice := close
if C_SpinningTopBlack
    blackSpinClosePrice := close

// 时间条件检查
isInTradingSession() =>
    session1 = enableSession1 ? time(timeframe.period, timeSession1, timezone) : na
    session2 = enableSession2 ? time(timeframe.period, timeSession2, timezone) : na
    session3 = enableSession3 ? time(timeframe.period, timeSession3, timezone) : na
    session4 = enableSession4 ? time(timeframe.period, timeSession4, timezone) : na
    session5 = enableSession5 ? time(timeframe.period, timeSession5, timezone) : na
    session6 = enableSession6 ? time(timeframe.period, timeSession6, timezone) : na
    session7 = enableSession7 ? time(timeframe.period, timeSession7, timezone) : na
    session8 = enableSession8 ? time(timeframe.period, timeSession8, timezone) : na
    session9 = enableSession9 ? time(timeframe.period, timeSession9, timezone) : na
    session10 = enableSession10 ? time(timeframe.period, timeSession10, timezone) : na
    not na(session1) or not na(session2) or not na(session3) or not na(session4) or not na(session5) or not na(session6) or not na(session7) or not na(session8) or not na(session9) or not na(session10)

bgcolor(showTimeBackground and isInTradingSession() ? color.new(color.blue, 95) : na)

// 检查是否在每小时的最后10分钟
isLastTenMinutes() =>
    currentMinute = minute(time)
    currentMinute >= 50

// 时间条件满足（分别为阻力位和纺锤线）
resistanceTimeConditionMet = isInTradingSession() and not isLastTenMinutes() and time >= resistanceStartTime
spinningTimeConditionMet = isInTradingSession() and not isLastTenMinutes()

// 纺锤线状态判断：使用barssince来判断最近的纺锤线类型
// 做多：白色纺锤线之后，出现黑色纺锤线之前
// 做空：黑色纺锤线之后，出现白色纺锤线之前
isAfterWhiteSpinBeforeBlack = bsSTW < bsTTB or (bsSTW >= 0 and na(bsTTB))
isAfterBlackSpinBeforeWhite = bsTTB < bsSTW or (bsTTB >= 0 and na(bsSTW))

// 做多条件
longCondition1 = false
longCondition2 = false

var longCondition1Count = 0

// 做多条件1：压力位突破, 只做一次
if resistanceLevel > 0 and longCondition1Count == 0
    bodyLength = close - open
    hasNoLowerShadow = open == low
    bodyAboveResistance = open < resistanceLevel and (close - resistanceLevel) / (close - open) > 2/3
    longCondition1 := C_WhiteBody and bodyLength >= minBodySize and hasNoLowerShadow and bodyAboveResistance and resistanceTimeConditionMet
    if longCondition1
        longCondition1Count += 1

var waitSTBReset = false
if C_SpinningTopBlack
    waitSTBReset := true
// 做多条件2：纺锤线做多
if isAfterWhiteSpinBeforeBlack and not C_SpinningTopBlack
    bodyLength = close - open
    hasNoLowerShadow = open == low
    priceCondition = enableSpinningTopPriceCheck ? (not na(whiteSpinClosePrice) and open > whiteSpinClosePrice) : true
    // 白色纺锤线到黑色纺锤线之间只做一次
    longCondition2 := waitSTBReset and C_WhiteBody and bodyLength >= minBodySize and hasNoLowerShadow and spinningTimeConditionMet and priceCondition
    if longCondition2
        waitSTBReset := false

// 做空条件
shortCondition1 = false
shortCondition2 = false

var shortCondition1Count = 0

var waitSTWReset = false
if C_SpinningTopWhite
    waitSTWReset := true

// 做空条件1：压力位做空, 只做一次
if resistanceLevel > 0 and shortCondition1Count == 0
    bodyLength = open - close
    hasNoUpperShadow = open == high
    bodyBelowResistance = open > resistanceLevel and (close - resistanceLevel) / (close - open) > 2/3
    shortCondition1 := C_BlackBody and bodyLength >= minBodySize and hasNoUpperShadow and bodyBelowResistance and resistanceTimeConditionMet
    if shortCondition1
        shortCondition1Count += 1

// 根据交易方向设置执行交易
canLong = tradingDirection == "做多"
canShort = tradingDirection == "做空"

// 绘制阻力位线
var line resistanceLine = na
var label resistanceLabel = na
if showResistanceLevel and resistanceLevel > 0 and time >= resistanceStartTime and na(resistanceLine)
    resistanceLine := line.new(bar_index, resistanceLevel, bar_index + 1, resistanceLevel, 
                              color=color.red, style=line.style_dashed, width=2, extend=extend.right)
    resistanceLabel := label.new(bar_index, resistanceLevel, "阻力位: " + str.tostring(resistanceLevel), 
                                  style=label.style_arrowup, color=color.red, textcolor=color.white, size=size.normal)


// 做空条件2：纺锤线做空
if isAfterBlackSpinBeforeWhite and not C_SpinningTopWhite
    bodyLength = open - close
    hasNoUpperShadow = open == high
    priceCondition = enableSpinningTopPriceCheck ? (not na(blackSpinClosePrice) and open < blackSpinClosePrice) : true
    // 黑色纺锤线到白色纺锤线之间只做一次
    shortCondition2 := waitSTWReset and C_BlackBody and bodyLength >= minBodySize and hasNoUpperShadow and spinningTimeConditionMet and priceCondition
    if shortCondition2
        waitSTWReset := false



// 信号触发
longSignal = canLong and (longCondition1 or (longCondition2 and enableSpinningTopSignal))
shortSignal = canShort and (shortCondition1 or (shortCondition2 and enableSpinningTopSignal))

// 绘制信号箭头
longResistanceSignal = canLong and longCondition1
longSpinningSignal = canLong and longCondition2 and enableSpinningTopSignal
shortResistanceSignal = canShort and shortCondition1
shortSpinningSignal = canShort and shortCondition2 and enableSpinningTopSignal

plotshape(longResistanceSignal, title="压力位做多", location=location.belowbar, color=color.green, style=shape.labelup, text="压", textcolor=color.white, size=size.small)
plotshape(longSpinningSignal, title="纺锤线做多", location=location.belowbar, color=color.lime, style=shape.labelup, text="纺", textcolor=color.white, size=size.small)
plotshape(shortResistanceSignal, title="压力位做空", location=location.abovebar, color=color.red, style=shape.labeldown, text="压", textcolor=color.white, size=size.small)
plotshape(shortSpinningSignal, title="纺锤线做空", location=location.abovebar, color=color.maroon, style=shape.labeldown, text="纺", textcolor=color.white, size=size.small)

// 警报条件
alertcondition(longResistanceSignal, title="压力位做多", message="long")
alertcondition(longSpinningSignal, title="纺锤线做多", message="long")
alertcondition(shortResistanceSignal, title="压力位做空", message="short")
alertcondition(shortSpinningSignal, title="纺锤线做空", message="short")

// 指标信息表格
var table indicatorTable = table.new(position.top_right, 2, 4, bgcolor=color.white, border_width=1)

if barstate.islast and showStrategyNotice
    // 表格标题
    table.cell(indicatorTable, 0, 0, "指标信息", text_color=color.black, bgcolor=color.gray, text_size=size.normal)
    table.cell(indicatorTable, 1, 0, "", text_color=color.black, bgcolor=color.gray)

    // 当前状态
    table.cell(indicatorTable, 0, 1, "当前状态", text_color=color.black, bgcolor=color.white)
    statusText = "等待信号中"
    table.cell(indicatorTable, 1, 1, statusText, text_color=color.blue, bgcolor=color.white)

    // 交易方向
    table.cell(indicatorTable, 0, 2, "交易方向", text_color=color.black, bgcolor=color.white)
    directionColor = tradingDirection == "做多" ? color.green : color.red
    table.cell(indicatorTable, 1, 2, tradingDirection, text_color=directionColor, bgcolor=color.white)

    // 使用说明
    table.cell(indicatorTable, 0, 3, "使用说明", text_color=color.black, bgcolor=color.new(color.blue, 90))
    noticeText = "📈 信号出现时会显示箭头\n⚠️ 请设置警报以接收通知"
    table.cell(indicatorTable, 1, 3, noticeText, text_color=color.blue, bgcolor=color.new(color.blue, 90), text_size=size.small)