worker_processes  auto;

events {
    worker_connections  1024;
    use epoll;
    multi_accept on;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    
    # 日志格式
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      'rt=$request_time uct="$upstream_connect_time" '
                      'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    # 访问日志
    access_log  logs/access.log  main;
    error_log   logs/error.log warn;
    
    # 基础设置
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;
    
    # 客户端设置
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml;
    
    # 上游服务器配置（MT5服务）
    upstream mt5_backend {
        server 127.0.0.1:5000 max_fails=3 fail_timeout=30s;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    # 限制请求频率
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=webhook:10m rate=5r/s;
    
    # HTTP服务器配置
    server {
        listen       80;
        server_name  localhost;
        
        # 安全头
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        
        # 根路径重定向到健康检查
        location = / {
            return 301 /health;
        }
        
        # 健康检查端点（无限制）
        location = /health {
            proxy_pass http://mt5_backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时设置
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # 缓存健康检查结果
            proxy_cache_valid 200 30s;
            add_header X-Cache-Status $upstream_cache_status;
        }
        
        # API端点（有频率限制）
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://mt5_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时设置
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # 缓冲设置
            proxy_buffering off;
            proxy_request_buffering off;
            
            # 连接复用
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
        
        # Webhook端点（特殊限制）
        location = /webhook {
            limit_req zone=webhook burst=10 nodelay;
            
            proxy_pass http://mt5_backend/webhook;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 允许大的请求体
            client_max_body_size 1M;
            
            # 超时设置
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 连接复用
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
        
        # 直接代理其他端点
        location / {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://mt5_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时设置
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # 连接复用
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
        
        # nginx状态页面（仅本地访问）
        location = /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
        
        # 禁止访问隐藏文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # 错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
    
    # HTTPS服务器配置（可选）
    # server {
    #     listen       443 ssl http2;
    #     server_name  your-domain.com;
    #     
    #     ssl_certificate      /path/to/cert.pem;
    #     ssl_certificate_key  /path/to/private.key;
    #     
    #     ssl_session_cache    shared:SSL:1m;
    #     ssl_session_timeout  5m;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers  on;
    #     
    #     # 其他配置与HTTP相同...
    # }
}
